{"mappings":"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","sources":["tictactoe.js"],"sourcesContent":["//let pubsub = require('pubsub.js');\nfunction Player(num){\n    let score = 0;\n    const value = num;\n    const name = \"Player \" + num;\n\n    const getValue = () => value;\n\n    const getScore = () => score;\n\n    const getName = () => name;\n    return {\n        getValue,\n        getScore,\n        getName\n    };\n}\n\nfunction Game(){\n    const gameBoard = GameBoard();\n    const winCheck = WinCheck(gameBoard);\n    const player1 = Player(1);\n    const player2 = Player(2);\n    const players = [player1, player2];\n    let currentPlayer = players[1];\n    let choice = 0;\n    \n\n    const printBoard = () => {\n        const board = gameBoard.getBoard();\n        const row1 = board[0] + ' ' + board[1] + ' ' + board[2];\n        const row2 = board[3] + ' ' + board[4] + ' ' + board[5];\n        const row3 = board[6] + ' ' + board[7] + ' ' + board[8];\n        console.log(row1 + '\\n' + row2 + '\\n' + row3);\n    };\n    \n    const switchPlayer = () => {\n        currentPlayer = currentPlayer === players[0] ? players[1] : players[0];\n    };\n    const makeChoice = () => {\n        choice = prompt(currentPlayer.getName() + \"'s turn\");\n    };\n    const setChoice = () => {\n        gameBoard.setBoard(choice, currentPlayer.getValue());\n    };\n    const manageChoice = () => {\n        makeChoice();\n        if(gameBoard.getBoard()[choice] === 0)\n            setChoice();\n        else{\n            console.log(\"Already taken. Try again.\");\n            manageChoice();\n        }\n    };\n    const getChoice = () => choice;\n\n    const playRound = () => {\n        printBoard();\n        switchPlayer();\n        manageChoice();\n        winCheck.runCheck();\n        return \"Round played.\";\n    };\n    return{\n        printBoard,\n        getChoice,\n        playRound\n    };\n}\n\nfunction GameBoard(){\n    const board = [];\n    for(let i = 0; i < 9; i++) board[i] = 0;\n    //const _render = () =>{};\n\n\n    const clearBoard = () =>{\n        for(let i = 0; i < 9; i++) board[i] = 0;\n    };\n\n    const setBoard = (spot, value) =>{\n        board[spot] = value;\n        return \"You have set \" + spot + \" to \" + value;\n    };\n\n    const getBoard = () => board;\n\n    return{\n        clearBoard,\n        setBoard,\n        getBoard\n    };\n}\nconst game = Game();\n    \n\nfunction WinCheck(board){\n    let win1 = false;\n    let win2 = false;\n    const runCheck = () =>{\n        rowOneCheck();\n        rowTwoCheck();\n        rowThreeCheck();\n        colOneCheck();\n        colTwoCheck();\n        colThreeCheck();\n        diagLTRCheck();\n        diagRTLCheck();\n\n        if(win1) return 1;\n        else if(win2) return 2;\n        else return 0;\n    };\n    //Rows\n    const rowOneCheck = () => {\n        if(board[0] === board[1] === board[2] && board[0] === 1){\n            win1 = true;\n        }\n        else if(board[0] === board[1] === board[2] && board[0] === 1){\n            win2 = true;\n        }\n    };\n    const rowTwoCheck = () => {\n        if(board[3] === board[4] === board[5] && board[3] === 1){\n            win1 = true;\n        }\n        else if(board[3] === board[4] === board[5] && board[3] === 1){\n            win2 = true;\n        }\n    };\n    const rowThreeCheck = () => {\n        if(board[6] === board[7] === board[8] && board[6] === 1){\n            win1 = true;\n        }\n        else if(board[6] === board[7] === board[8] && board[6] === 1){\n            win2 = true;\n        }\n    };\n    //Columns\n    const colOneCheck = () => {\n        if(board[0] === board[3] === board[6] && board[0] === 1){\n            win1 = true;\n        }\n        else if(board[0] === board[3] === board[6] && board[0] === 1){\n            win2 = true;\n        }\n    };\n    const colTwoCheck = () => {\n        if(board[1] === board[4] === board[7] && board[1] === 1){\n            win1 = true;\n        }\n        else if(board[1] === board[4] === board[7] && board[1] === 1){\n            win2 = true;\n        }\n    };\n    const colThreeCheck = () => {\n        if(board[2] === board[5] === board[8] && board[2] === 1){\n            win1 = true;\n        }\n        else if(board[2] === board[5] === board[8] && board[2] === 1){\n            win2 = true;\n        }\n    };\n    //Diagonals\n    const diagLTRCheck = () => {\n        if(board[0] === board[4] === board[8] && board[0] === 1){\n            win1 = true;\n        }\n        else if(board[0] === board[4] === board[8] && board[0] === 1){\n            win2 = true;\n        }\n    };\n    const diagRTLCheck = () => {\n        if(board[2] === board[4] === board[6] && board[2] === 1){\n            win1 = true;\n        }\n        else if(board[2] === board[4] === board[6] && board[2] === 1){\n            win2 = true;\n        }\n    };\n    return{\n        runCheck\n    };\n}"],"names":[],"version":3,"file":"index.134d9fb2.js.map","sourceRoot":"/__parcel_source_root/"}